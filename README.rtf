{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 December 14, 2014\
Pascal in Python\
Grace Baelen-King\
ebaelenkin@brynmawr.edu\
\
This project was built off of a project started by Alcides Fonseca (amaf@student.dei.uc.pt, {\field{\*\fldinst{HYPERLINK "https://github.com/alcides/pascal-in-python"}}{\fldrslt https://github.com/alcides/pascal-in-python}}). Fonseca created a parser and AST for Pascal and a function that  checked the syntax and return types of the AST. \
\
For my project I extended the original by replacing the check() with interpreter(). Interpreter() is the beginning portion of a functioning interpreter. It can successfully interpret, control statements, basic operations and writeln(). However, no other functions work at this time.\
\
This project was done for Doug Blank\'92s Programming Languages class Fall 2014 at Bryn Mawr College. }